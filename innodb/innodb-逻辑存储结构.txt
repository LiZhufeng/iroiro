输出：表空间的总结，每一种数据的格式，以及为什么是这么设计的

(逻辑存储结构截图)

感觉数据结构就是一个分区的样子

一、表空间

几个配置：
innodb_file_per_table：是否每一张表数据区分文件存储数据（生产环境：ON）
Autocommit：是否自动提交事务（可用于测试共享表空间的大小变化）

注意：即使是设置了innodb_file_per_table = ON，一些数据，比如：undo操作、insert buffer、double write buffer 还是放在共享表里面的。

注意到其实放到共享表里面的数据都是Master Thread 操作的数据，这个估计也是为了方便吧。
如果undo、insert buffer 这些数据还是存在每一张表的数据里面，表多的时候，master thread 遍历就很麻烦了。

提醒：设置了innodb_file_per_table = ON，每一个数据库的文件会单独放到数据库名称下的文件夹里面，其中，每一个表都有一个.frm表描述文件，还有一个.ibd文件。 其中这个文件包括了单独一个表的数据内容以及索引内容

二、段
数据段、索引段、回滚段

索引段好理解，其实就是B+树的结构

三、区

一些默认大小：
1、区的大小：1M
2、一页的大小：16K
---> 一个区中最大的页数量为64个

扩展方式：和Vector 有点类似：
一开始是使用默认扩展的方式，即在32个页 之前的数据，都是添加数据就会增加 idb文件的大小；但是后续的话就会按照一个区的大小（1M）来扩张。直到用完这次申请的1M 数据才会继续申请新的区空间。

问题① 为什么插入两条数据就是占用一页？VARCHAR(7000)？
---> VARCHAR 的大小计算，按照一个字符3个字节来计算
---> UTF8 是占用3个字节，GTB 是两个字节
7000*2/1024=13.6

四、页
（截图：页的类型）

Innodb 1.2.x 版本之后，页的大小可以手动修改，默认是16K

五、行
最多允许存放的记录数量：7992 条?



这个可能和扩展有关系，下来再看下




 








